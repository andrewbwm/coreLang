category Security {

  abstract asset VulnerabilityExtensionPoint {
  	| incoming
      ->  localConnect,
          networkRequestConnect,
          networkRespondConnect
  	
  	| localConnect

    | networkRequestConnect

    | networkRespondConnect

    # userInteracts
      user info: "Some exploits require user interaction. This defense specifies the probability of such interaction on the given application."
  }

  abstract asset Vulnerability
  {
     | attemptAbuse @hidden
       -> abuse

     & abuse
       user info: "The attacker is attempting to abuse a vulnerability in an application."
       -> exploits.impact
  }



  asset UnknownVulnerability extends Vulnerability
    developer info: "Meant to capture vulnerabilities without CVE or to model what-if scenarios where the parser controls the impact and distribution based on e.g., Attacker Profiles"
    modeler info: "To be used together with Exploit specializations based on your modeling scenario"
  {
  }
    
  abstract asset Exploit
    user info: "An exploited vulnerability lead to some kind of impact. The kind is given by CVSS 3.0."
  {
    | impact
  }

  asset UnknownExploit extends Exploit
    user info: "Potential unknown exploits that might occur due flaws or configuration errors in software, e.g., 0-day exploits or exploits not discovered by scanners."
    modeler info: "The specialization is assumed to be used with the UnknownVulnerability asset"
    developer info: "Distributions are omitted and are meant to be controlled by a parser based on e.g., scenarios or threat profiles"
  {
    | impact @hidden
      -> requestForgery,
        codeExecution,
        modify,
        deny,
        read

   | requestForgery
      user info: "Request Forgery attacks occur when the attacker can create or control transmissions from a vulnerable application."
      -> vulnerability.extensionPoint.application.networkInterfaces.transmit,
         vulnerability.extensionPoint.application.networkInterfaces.transmitResponse

   | codeExecution
      user info: "The attacker is able to inject code into the application process, thus assuming the application's privileges on the hosting instance and influence other applications or the underlying OS."
      -> vulnerability.extensionPoint.application.codeExecution

   | modify
     user info: "The attacker can modify some or all of this application's data."
      ->  vulnerability.extensionPoint.application.modify

    | deny
      user info: "Denial-of-service attack is an attack in where a machine or network resource is rendered unavailable to its intended users by temporarily or indefinitely disrupting it"
      -> vulnerability.extensionPoint.application.deny

    | read
      user info: "The attacker can read some or all of this applications's code and data."
      -> vulnerability.extensionPoint.application.read
  }
}

associations {
  VulnerabilityExtensionPoint [extensionPoint]  1 <-- ApplicationVulnerability --> 1    [application]     Application
  Vulnerability               [vulnerabilities] * <-- ApplicationVulnerability --> 0..1 [extensionPoint]  VulnerabilityExtensionPoint
  Vulnerability               [vulnerability]   1 <-- VulnerabilityExploit --> *        [exploits]        Exploit

}